// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: waArmadilloMiTransportAdminMessage/WAArmadilloMiTransportAdminMessage.proto

package waArmadilloMiTransportAdminMessage

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MiTransportAdminMessage_LimitSharingChanged_SharingType int32

const (
	MiTransportAdminMessage_LimitSharingChanged_UNSET    MiTransportAdminMessage_LimitSharingChanged_SharingType = 0
	MiTransportAdminMessage_LimitSharingChanged_DISABLED MiTransportAdminMessage_LimitSharingChanged_SharingType = 1
	MiTransportAdminMessage_LimitSharingChanged_ENABLED  MiTransportAdminMessage_LimitSharingChanged_SharingType = 2
)

// Enum value maps for MiTransportAdminMessage_LimitSharingChanged_SharingType.
var (
	MiTransportAdminMessage_LimitSharingChanged_SharingType_name = map[int32]string{
		0: "UNSET",
		1: "DISABLED",
		2: "ENABLED",
	}
	MiTransportAdminMessage_LimitSharingChanged_SharingType_value = map[string]int32{
		"UNSET":    0,
		"DISABLED": 1,
		"ENABLED":  2,
	}
)

func (x MiTransportAdminMessage_LimitSharingChanged_SharingType) Enum() *MiTransportAdminMessage_LimitSharingChanged_SharingType {
	p := new(MiTransportAdminMessage_LimitSharingChanged_SharingType)
	*p = x
	return p
}

func (x MiTransportAdminMessage_LimitSharingChanged_SharingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MiTransportAdminMessage_LimitSharingChanged_SharingType) Descriptor() protoreflect.EnumDescriptor {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[0].Descriptor()
}

func (MiTransportAdminMessage_LimitSharingChanged_SharingType) Type() protoreflect.EnumType {
	return &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[0]
}

func (x MiTransportAdminMessage_LimitSharingChanged_SharingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MiTransportAdminMessage_LimitSharingChanged_SharingType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MiTransportAdminMessage_LimitSharingChanged_SharingType(num)
	return nil
}

// Deprecated: Use MiTransportAdminMessage_LimitSharingChanged_SharingType.Descriptor instead.
func (MiTransportAdminMessage_LimitSharingChanged_SharingType) EnumDescriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 0, 0}
}

type MiTransportAdminMessage_GroupImageChanged_Action int32

const (
	MiTransportAdminMessage_GroupImageChanged_UNSET   MiTransportAdminMessage_GroupImageChanged_Action = 0
	MiTransportAdminMessage_GroupImageChanged_CHANGED MiTransportAdminMessage_GroupImageChanged_Action = 1
	MiTransportAdminMessage_GroupImageChanged_REMOVED MiTransportAdminMessage_GroupImageChanged_Action = 2
)

// Enum value maps for MiTransportAdminMessage_GroupImageChanged_Action.
var (
	MiTransportAdminMessage_GroupImageChanged_Action_name = map[int32]string{
		0: "UNSET",
		1: "CHANGED",
		2: "REMOVED",
	}
	MiTransportAdminMessage_GroupImageChanged_Action_value = map[string]int32{
		"UNSET":   0,
		"CHANGED": 1,
		"REMOVED": 2,
	}
)

func (x MiTransportAdminMessage_GroupImageChanged_Action) Enum() *MiTransportAdminMessage_GroupImageChanged_Action {
	p := new(MiTransportAdminMessage_GroupImageChanged_Action)
	*p = x
	return p
}

func (x MiTransportAdminMessage_GroupImageChanged_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MiTransportAdminMessage_GroupImageChanged_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[1].Descriptor()
}

func (MiTransportAdminMessage_GroupImageChanged_Action) Type() protoreflect.EnumType {
	return &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[1]
}

func (x MiTransportAdminMessage_GroupImageChanged_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MiTransportAdminMessage_GroupImageChanged_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MiTransportAdminMessage_GroupImageChanged_Action(num)
	return nil
}

// Deprecated: Use MiTransportAdminMessage_GroupImageChanged_Action.Descriptor instead.
func (MiTransportAdminMessage_GroupImageChanged_Action) EnumDescriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 1, 0}
}

type MiTransportAdminMessage_MessagePinned_Action int32

const (
	MiTransportAdminMessage_MessagePinned_UNSET    MiTransportAdminMessage_MessagePinned_Action = 0
	MiTransportAdminMessage_MessagePinned_PINNED   MiTransportAdminMessage_MessagePinned_Action = 1
	MiTransportAdminMessage_MessagePinned_UNPINNED MiTransportAdminMessage_MessagePinned_Action = 2
)

// Enum value maps for MiTransportAdminMessage_MessagePinned_Action.
var (
	MiTransportAdminMessage_MessagePinned_Action_name = map[int32]string{
		0: "UNSET",
		1: "PINNED",
		2: "UNPINNED",
	}
	MiTransportAdminMessage_MessagePinned_Action_value = map[string]int32{
		"UNSET":    0,
		"PINNED":   1,
		"UNPINNED": 2,
	}
)

func (x MiTransportAdminMessage_MessagePinned_Action) Enum() *MiTransportAdminMessage_MessagePinned_Action {
	p := new(MiTransportAdminMessage_MessagePinned_Action)
	*p = x
	return p
}

func (x MiTransportAdminMessage_MessagePinned_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MiTransportAdminMessage_MessagePinned_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[2].Descriptor()
}

func (MiTransportAdminMessage_MessagePinned_Action) Type() protoreflect.EnumType {
	return &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[2]
}

func (x MiTransportAdminMessage_MessagePinned_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MiTransportAdminMessage_MessagePinned_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MiTransportAdminMessage_MessagePinned_Action(num)
	return nil
}

// Deprecated: Use MiTransportAdminMessage_MessagePinned_Action.Descriptor instead.
func (MiTransportAdminMessage_MessagePinned_Action) EnumDescriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 2, 0}
}

type MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode int32

const (
	MiTransportAdminMessage_GroupMembershipAddModeChanged_UNSET       MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode = 0
	MiTransportAdminMessage_GroupMembershipAddModeChanged_ALL_MEMBERS MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode = 1
	MiTransportAdminMessage_GroupMembershipAddModeChanged_ADMINS_ONLY MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode = 2
)

// Enum value maps for MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode.
var (
	MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode_name = map[int32]string{
		0: "UNSET",
		1: "ALL_MEMBERS",
		2: "ADMINS_ONLY",
	}
	MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode_value = map[string]int32{
		"UNSET":       0,
		"ALL_MEMBERS": 1,
		"ADMINS_ONLY": 2,
	}
)

func (x MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode) Enum() *MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode {
	p := new(MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode)
	*p = x
	return p
}

func (x MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[3].Descriptor()
}

func (MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode) Type() protoreflect.EnumType {
	return &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[3]
}

func (x MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode(num)
	return nil
}

// Deprecated: Use MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode.Descriptor instead.
func (MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode) EnumDescriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 3, 0}
}

type MiTransportAdminMessage_GroupAdminChanged_Action int32

const (
	MiTransportAdminMessage_GroupAdminChanged_UNSET   MiTransportAdminMessage_GroupAdminChanged_Action = 0
	MiTransportAdminMessage_GroupAdminChanged_ADDED   MiTransportAdminMessage_GroupAdminChanged_Action = 1
	MiTransportAdminMessage_GroupAdminChanged_REMOVED MiTransportAdminMessage_GroupAdminChanged_Action = 2
)

// Enum value maps for MiTransportAdminMessage_GroupAdminChanged_Action.
var (
	MiTransportAdminMessage_GroupAdminChanged_Action_name = map[int32]string{
		0: "UNSET",
		1: "ADDED",
		2: "REMOVED",
	}
	MiTransportAdminMessage_GroupAdminChanged_Action_value = map[string]int32{
		"UNSET":   0,
		"ADDED":   1,
		"REMOVED": 2,
	}
)

func (x MiTransportAdminMessage_GroupAdminChanged_Action) Enum() *MiTransportAdminMessage_GroupAdminChanged_Action {
	p := new(MiTransportAdminMessage_GroupAdminChanged_Action)
	*p = x
	return p
}

func (x MiTransportAdminMessage_GroupAdminChanged_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MiTransportAdminMessage_GroupAdminChanged_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[4].Descriptor()
}

func (MiTransportAdminMessage_GroupAdminChanged_Action) Type() protoreflect.EnumType {
	return &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[4]
}

func (x MiTransportAdminMessage_GroupAdminChanged_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MiTransportAdminMessage_GroupAdminChanged_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MiTransportAdminMessage_GroupAdminChanged_Action(num)
	return nil
}

// Deprecated: Use MiTransportAdminMessage_GroupAdminChanged_Action.Descriptor instead.
func (MiTransportAdminMessage_GroupAdminChanged_Action) EnumDescriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 4, 0}
}

type MiTransportAdminMessage_GroupParticipantChanged_Action int32

const (
	MiTransportAdminMessage_GroupParticipantChanged_UNSET   MiTransportAdminMessage_GroupParticipantChanged_Action = 0
	MiTransportAdminMessage_GroupParticipantChanged_ADDED   MiTransportAdminMessage_GroupParticipantChanged_Action = 1
	MiTransportAdminMessage_GroupParticipantChanged_REMOVED MiTransportAdminMessage_GroupParticipantChanged_Action = 2
)

// Enum value maps for MiTransportAdminMessage_GroupParticipantChanged_Action.
var (
	MiTransportAdminMessage_GroupParticipantChanged_Action_name = map[int32]string{
		0: "UNSET",
		1: "ADDED",
		2: "REMOVED",
	}
	MiTransportAdminMessage_GroupParticipantChanged_Action_value = map[string]int32{
		"UNSET":   0,
		"ADDED":   1,
		"REMOVED": 2,
	}
)

func (x MiTransportAdminMessage_GroupParticipantChanged_Action) Enum() *MiTransportAdminMessage_GroupParticipantChanged_Action {
	p := new(MiTransportAdminMessage_GroupParticipantChanged_Action)
	*p = x
	return p
}

func (x MiTransportAdminMessage_GroupParticipantChanged_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MiTransportAdminMessage_GroupParticipantChanged_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[5].Descriptor()
}

func (MiTransportAdminMessage_GroupParticipantChanged_Action) Type() protoreflect.EnumType {
	return &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes[5]
}

func (x MiTransportAdminMessage_GroupParticipantChanged_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MiTransportAdminMessage_GroupParticipantChanged_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MiTransportAdminMessage_GroupParticipantChanged_Action(num)
	return nil
}

// Deprecated: Use MiTransportAdminMessage_GroupParticipantChanged_Action.Descriptor instead.
func (MiTransportAdminMessage_GroupParticipantChanged_Action) EnumDescriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 5, 0}
}

type MiTransportAdminMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*MiTransportAdminMessage_ChatThemeChanged_
	//	*MiTransportAdminMessage_NicknameChanged_
	//	*MiTransportAdminMessage_GroupParticipantChanged_
	//	*MiTransportAdminMessage_GroupAdminChanged_
	//	*MiTransportAdminMessage_GroupNameChanged_
	//	*MiTransportAdminMessage_GroupMembershipAddModeChanged_
	//	*MiTransportAdminMessage_MessagePinned_
	//	*MiTransportAdminMessage_GroupImageChanged_
	//	*MiTransportAdminMessage_QuickReactionChanged_
	//	*MiTransportAdminMessage_LinkCta_
	//	*MiTransportAdminMessage_IconChanged_
	//	*MiTransportAdminMessage_DisappearingSettingChanged_
	//	*MiTransportAdminMessage_LimitSharingChanged_
	//	*MiTransportAdminMessage_XmatDisappearingSetting_
	//	*MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted_
	//	*MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate_
	//	*MiTransportAdminMessage_XmatLinkCta
	//	*MiTransportAdminMessage_XmatMagicWords_
	//	*MiTransportAdminMessage_XmatMessagingLimitSharing_
	//	*MiTransportAdminMessage_XmatMessengerQrCodeScanned
	//	*MiTransportAdminMessage_XmatMessengerSharedAlbumAddition_
	//	*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_
	//	*MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion_
	//	*MiTransportAdminMessage_XmatMessengerSharedAlbumRename_
	//	*MiTransportAdminMessage_XmatMessengerSharedAlbum_
	//	*MiTransportAdminMessage_XmatThemeColor_
	//	*MiTransportAdminMessage_XmatThreadIcon_
	//	*MiTransportAdminMessage_XmatThreadNickname_
	//	*MiTransportAdminMessage_XmatThreadQuickReaction_
	//	*MiTransportAdminMessage_XmatUpdatePayments_
	//	*MiTransportAdminMessage_XmatPinMessageV2_
	//	*MiTransportAdminMessage_XmatUnpinMessageV2_
	Content       isMiTransportAdminMessage_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage) Reset() {
	*x = MiTransportAdminMessage{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage) ProtoMessage() {}

func (x *MiTransportAdminMessage) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0}
}

func (x *MiTransportAdminMessage) GetContent() isMiTransportAdminMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MiTransportAdminMessage) GetChatThemeChanged() *MiTransportAdminMessage_ChatThemeChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_ChatThemeChanged_); ok {
			return x.ChatThemeChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetNicknameChanged() *MiTransportAdminMessage_NicknameChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_NicknameChanged_); ok {
			return x.NicknameChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetGroupParticipantChanged() *MiTransportAdminMessage_GroupParticipantChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_GroupParticipantChanged_); ok {
			return x.GroupParticipantChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetGroupAdminChanged() *MiTransportAdminMessage_GroupAdminChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_GroupAdminChanged_); ok {
			return x.GroupAdminChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetGroupNameChanged() *MiTransportAdminMessage_GroupNameChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_GroupNameChanged_); ok {
			return x.GroupNameChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetGroupMembershipAddModeChanged() *MiTransportAdminMessage_GroupMembershipAddModeChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_GroupMembershipAddModeChanged_); ok {
			return x.GroupMembershipAddModeChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetMessagePinned() *MiTransportAdminMessage_MessagePinned {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_MessagePinned_); ok {
			return x.MessagePinned
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetGroupImageChanged() *MiTransportAdminMessage_GroupImageChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_GroupImageChanged_); ok {
			return x.GroupImageChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetQuickReactionChanged() *MiTransportAdminMessage_QuickReactionChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_QuickReactionChanged_); ok {
			return x.QuickReactionChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetLinkCta() *MiTransportAdminMessage_LinkCta {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_LinkCta_); ok {
			return x.LinkCta
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetIconChanged() *MiTransportAdminMessage_IconChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_IconChanged_); ok {
			return x.IconChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetDisappearingSettingChanged() *MiTransportAdminMessage_DisappearingSettingChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_DisappearingSettingChanged_); ok {
			return x.DisappearingSettingChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetLimitSharingChanged() *MiTransportAdminMessage_LimitSharingChanged {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_LimitSharingChanged_); ok {
			return x.LimitSharingChanged
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatDisappearingSetting() *MiTransportAdminMessage_XmatDisappearingSetting {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatDisappearingSetting_); ok {
			return x.XmatDisappearingSetting
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatFriendRequestConfirmedEncrypted() *MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted_); ok {
			return x.XmatFriendRequestConfirmedEncrypted
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatInstantGameEncryptedDynamicCustomUpdate() *MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate_); ok {
			return x.XmatInstantGameEncryptedDynamicCustomUpdate
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatLinkCta() *MiTransportAdminMessage_XmatLinkCTA {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatLinkCta); ok {
			return x.XmatLinkCta
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatMagicWords() *MiTransportAdminMessage_XmatMagicWords {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatMagicWords_); ok {
			return x.XmatMagicWords
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatMessagingLimitSharing() *MiTransportAdminMessage_XmatMessagingLimitSharing {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatMessagingLimitSharing_); ok {
			return x.XmatMessagingLimitSharing
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatMessengerQrCodeScanned() *MiTransportAdminMessage_XmatMessengerQRCodeScanned {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatMessengerQrCodeScanned); ok {
			return x.XmatMessengerQrCodeScanned
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatMessengerSharedAlbumAddition() *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatMessengerSharedAlbumAddition_); ok {
			return x.XmatMessengerSharedAlbumAddition
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatMessengerSharedAlbumContentRemoval() *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_); ok {
			return x.XmatMessengerSharedAlbumContentRemoval
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatMessengerSharedAlbumDeletion() *MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion_); ok {
			return x.XmatMessengerSharedAlbumDeletion
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatMessengerSharedAlbumRename() *MiTransportAdminMessage_XmatMessengerSharedAlbumRename {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatMessengerSharedAlbumRename_); ok {
			return x.XmatMessengerSharedAlbumRename
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatMessengerSharedAlbum() *MiTransportAdminMessage_XmatMessengerSharedAlbum {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatMessengerSharedAlbum_); ok {
			return x.XmatMessengerSharedAlbum
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatThemeColor() *MiTransportAdminMessage_XmatThemeColor {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatThemeColor_); ok {
			return x.XmatThemeColor
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatThreadIcon() *MiTransportAdminMessage_XmatThreadIcon {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatThreadIcon_); ok {
			return x.XmatThreadIcon
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatThreadNickname() *MiTransportAdminMessage_XmatThreadNickname {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatThreadNickname_); ok {
			return x.XmatThreadNickname
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatThreadQuickReaction() *MiTransportAdminMessage_XmatThreadQuickReaction {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatThreadQuickReaction_); ok {
			return x.XmatThreadQuickReaction
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatUpdatePayments() *MiTransportAdminMessage_XmatUpdatePayments {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatUpdatePayments_); ok {
			return x.XmatUpdatePayments
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatPinMessageV2() *MiTransportAdminMessage_XmatPinMessageV2 {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatPinMessageV2_); ok {
			return x.XmatPinMessageV2
		}
	}
	return nil
}

func (x *MiTransportAdminMessage) GetXmatUnpinMessageV2() *MiTransportAdminMessage_XmatUnpinMessageV2 {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_XmatUnpinMessageV2_); ok {
			return x.XmatUnpinMessageV2
		}
	}
	return nil
}

type isMiTransportAdminMessage_Content interface {
	isMiTransportAdminMessage_Content()
}

type MiTransportAdminMessage_ChatThemeChanged_ struct {
	ChatThemeChanged *MiTransportAdminMessage_ChatThemeChanged `protobuf:"bytes,1,opt,name=chatThemeChanged,oneof"`
}

type MiTransportAdminMessage_NicknameChanged_ struct {
	NicknameChanged *MiTransportAdminMessage_NicknameChanged `protobuf:"bytes,2,opt,name=nicknameChanged,oneof"`
}

type MiTransportAdminMessage_GroupParticipantChanged_ struct {
	GroupParticipantChanged *MiTransportAdminMessage_GroupParticipantChanged `protobuf:"bytes,3,opt,name=groupParticipantChanged,oneof"`
}

type MiTransportAdminMessage_GroupAdminChanged_ struct {
	GroupAdminChanged *MiTransportAdminMessage_GroupAdminChanged `protobuf:"bytes,4,opt,name=groupAdminChanged,oneof"`
}

type MiTransportAdminMessage_GroupNameChanged_ struct {
	GroupNameChanged *MiTransportAdminMessage_GroupNameChanged `protobuf:"bytes,5,opt,name=groupNameChanged,oneof"`
}

type MiTransportAdminMessage_GroupMembershipAddModeChanged_ struct {
	GroupMembershipAddModeChanged *MiTransportAdminMessage_GroupMembershipAddModeChanged `protobuf:"bytes,6,opt,name=groupMembershipAddModeChanged,oneof"`
}

type MiTransportAdminMessage_MessagePinned_ struct {
	MessagePinned *MiTransportAdminMessage_MessagePinned `protobuf:"bytes,7,opt,name=messagePinned,oneof"`
}

type MiTransportAdminMessage_GroupImageChanged_ struct {
	GroupImageChanged *MiTransportAdminMessage_GroupImageChanged `protobuf:"bytes,8,opt,name=groupImageChanged,oneof"`
}

type MiTransportAdminMessage_QuickReactionChanged_ struct {
	QuickReactionChanged *MiTransportAdminMessage_QuickReactionChanged `protobuf:"bytes,9,opt,name=quickReactionChanged,oneof"`
}

type MiTransportAdminMessage_LinkCta_ struct {
	LinkCta *MiTransportAdminMessage_LinkCta `protobuf:"bytes,10,opt,name=linkCta,oneof"`
}

type MiTransportAdminMessage_IconChanged_ struct {
	IconChanged *MiTransportAdminMessage_IconChanged `protobuf:"bytes,11,opt,name=iconChanged,oneof"`
}

type MiTransportAdminMessage_DisappearingSettingChanged_ struct {
	DisappearingSettingChanged *MiTransportAdminMessage_DisappearingSettingChanged `protobuf:"bytes,12,opt,name=disappearingSettingChanged,oneof"`
}

type MiTransportAdminMessage_LimitSharingChanged_ struct {
	LimitSharingChanged *MiTransportAdminMessage_LimitSharingChanged `protobuf:"bytes,13,opt,name=limitSharingChanged,oneof"`
}

type MiTransportAdminMessage_XmatDisappearingSetting_ struct {
	XmatDisappearingSetting *MiTransportAdminMessage_XmatDisappearingSetting `protobuf:"bytes,14,opt,name=xmatDisappearingSetting,oneof"`
}

type MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted_ struct {
	XmatFriendRequestConfirmedEncrypted *MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted `protobuf:"bytes,15,opt,name=xmatFriendRequestConfirmedEncrypted,oneof"`
}

type MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate_ struct {
	XmatInstantGameEncryptedDynamicCustomUpdate *MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate `protobuf:"bytes,16,opt,name=xmatInstantGameEncryptedDynamicCustomUpdate,oneof"`
}

type MiTransportAdminMessage_XmatLinkCta struct {
	XmatLinkCta *MiTransportAdminMessage_XmatLinkCTA `protobuf:"bytes,17,opt,name=xmatLinkCta,oneof"`
}

type MiTransportAdminMessage_XmatMagicWords_ struct {
	XmatMagicWords *MiTransportAdminMessage_XmatMagicWords `protobuf:"bytes,18,opt,name=xmatMagicWords,oneof"`
}

type MiTransportAdminMessage_XmatMessagingLimitSharing_ struct {
	XmatMessagingLimitSharing *MiTransportAdminMessage_XmatMessagingLimitSharing `protobuf:"bytes,19,opt,name=xmatMessagingLimitSharing,oneof"`
}

type MiTransportAdminMessage_XmatMessengerQrCodeScanned struct {
	XmatMessengerQrCodeScanned *MiTransportAdminMessage_XmatMessengerQRCodeScanned `protobuf:"bytes,20,opt,name=xmatMessengerQrCodeScanned,oneof"`
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumAddition_ struct {
	XmatMessengerSharedAlbumAddition *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition `protobuf:"bytes,21,opt,name=xmatMessengerSharedAlbumAddition,oneof"`
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_ struct {
	XmatMessengerSharedAlbumContentRemoval *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval `protobuf:"bytes,22,opt,name=xmatMessengerSharedAlbumContentRemoval,oneof"`
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion_ struct {
	XmatMessengerSharedAlbumDeletion *MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion `protobuf:"bytes,23,opt,name=xmatMessengerSharedAlbumDeletion,oneof"`
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumRename_ struct {
	XmatMessengerSharedAlbumRename *MiTransportAdminMessage_XmatMessengerSharedAlbumRename `protobuf:"bytes,24,opt,name=xmatMessengerSharedAlbumRename,oneof"`
}

type MiTransportAdminMessage_XmatMessengerSharedAlbum_ struct {
	XmatMessengerSharedAlbum *MiTransportAdminMessage_XmatMessengerSharedAlbum `protobuf:"bytes,25,opt,name=xmatMessengerSharedAlbum,oneof"`
}

type MiTransportAdminMessage_XmatThemeColor_ struct {
	XmatThemeColor *MiTransportAdminMessage_XmatThemeColor `protobuf:"bytes,26,opt,name=xmatThemeColor,oneof"`
}

type MiTransportAdminMessage_XmatThreadIcon_ struct {
	XmatThreadIcon *MiTransportAdminMessage_XmatThreadIcon `protobuf:"bytes,27,opt,name=xmatThreadIcon,oneof"`
}

type MiTransportAdminMessage_XmatThreadNickname_ struct {
	XmatThreadNickname *MiTransportAdminMessage_XmatThreadNickname `protobuf:"bytes,28,opt,name=xmatThreadNickname,oneof"`
}

type MiTransportAdminMessage_XmatThreadQuickReaction_ struct {
	XmatThreadQuickReaction *MiTransportAdminMessage_XmatThreadQuickReaction `protobuf:"bytes,29,opt,name=xmatThreadQuickReaction,oneof"`
}

type MiTransportAdminMessage_XmatUpdatePayments_ struct {
	XmatUpdatePayments *MiTransportAdminMessage_XmatUpdatePayments `protobuf:"bytes,30,opt,name=xmatUpdatePayments,oneof"`
}

type MiTransportAdminMessage_XmatPinMessageV2_ struct {
	XmatPinMessageV2 *MiTransportAdminMessage_XmatPinMessageV2 `protobuf:"bytes,31,opt,name=xmatPinMessageV2,oneof"`
}

type MiTransportAdminMessage_XmatUnpinMessageV2_ struct {
	XmatUnpinMessageV2 *MiTransportAdminMessage_XmatUnpinMessageV2 `protobuf:"bytes,32,opt,name=xmatUnpinMessageV2,oneof"`
}

func (*MiTransportAdminMessage_ChatThemeChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_NicknameChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_GroupParticipantChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_GroupAdminChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_GroupNameChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_GroupMembershipAddModeChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_MessagePinned_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_GroupImageChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_QuickReactionChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_LinkCta_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_IconChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_DisappearingSettingChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_LimitSharingChanged_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatDisappearingSetting_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted_) isMiTransportAdminMessage_Content() {
}

func (*MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate_) isMiTransportAdminMessage_Content() {
}

func (*MiTransportAdminMessage_XmatLinkCta) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatMagicWords_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatMessagingLimitSharing_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatMessengerQrCodeScanned) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumAddition_) isMiTransportAdminMessage_Content() {
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_) isMiTransportAdminMessage_Content() {
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion_) isMiTransportAdminMessage_Content() {
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumRename_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbum_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatThemeColor_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatThreadIcon_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatThreadNickname_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatThreadQuickReaction_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatUpdatePayments_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatPinMessageV2_) isMiTransportAdminMessage_Content() {}

func (*MiTransportAdminMessage_XmatUnpinMessageV2_) isMiTransportAdminMessage_Content() {}

type MiTransportAdminMessage_LimitSharingChanged struct {
	state         protoimpl.MessageState                                   `protogen:"open.v1"`
	SharingType   *MiTransportAdminMessage_LimitSharingChanged_SharingType `protobuf:"varint,1,opt,name=sharingType,enum=WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage_LimitSharingChanged_SharingType" json:"sharingType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_LimitSharingChanged) Reset() {
	*x = MiTransportAdminMessage_LimitSharingChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_LimitSharingChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_LimitSharingChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_LimitSharingChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_LimitSharingChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_LimitSharingChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MiTransportAdminMessage_LimitSharingChanged) GetSharingType() MiTransportAdminMessage_LimitSharingChanged_SharingType {
	if x != nil && x.SharingType != nil {
		return *x.SharingType
	}
	return MiTransportAdminMessage_LimitSharingChanged_UNSET
}

type MiTransportAdminMessage_GroupImageChanged struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Action        *MiTransportAdminMessage_GroupImageChanged_Action `protobuf:"varint,1,opt,name=action,enum=WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage_GroupImageChanged_Action" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_GroupImageChanged) Reset() {
	*x = MiTransportAdminMessage_GroupImageChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_GroupImageChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_GroupImageChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_GroupImageChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_GroupImageChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_GroupImageChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 1}
}

func (x *MiTransportAdminMessage_GroupImageChanged) GetAction() MiTransportAdminMessage_GroupImageChanged_Action {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return MiTransportAdminMessage_GroupImageChanged_UNSET
}

type MiTransportAdminMessage_MessagePinned struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Action        *MiTransportAdminMessage_MessagePinned_Action `protobuf:"varint,1,opt,name=action,enum=WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage_MessagePinned_Action" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_MessagePinned) Reset() {
	*x = MiTransportAdminMessage_MessagePinned{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_MessagePinned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_MessagePinned) ProtoMessage() {}

func (x *MiTransportAdminMessage_MessagePinned) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_MessagePinned.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_MessagePinned) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 2}
}

func (x *MiTransportAdminMessage_MessagePinned) GetAction() MiTransportAdminMessage_MessagePinned_Action {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return MiTransportAdminMessage_MessagePinned_UNSET
}

type MiTransportAdminMessage_GroupMembershipAddModeChanged struct {
	state         protoimpl.MessageState                                      `protogen:"open.v1"`
	Mode          *MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode `protobuf:"varint,1,opt,name=mode,enum=WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_GroupMembershipAddModeChanged) Reset() {
	*x = MiTransportAdminMessage_GroupMembershipAddModeChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_GroupMembershipAddModeChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_GroupMembershipAddModeChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_GroupMembershipAddModeChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_GroupMembershipAddModeChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_GroupMembershipAddModeChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 3}
}

func (x *MiTransportAdminMessage_GroupMembershipAddModeChanged) GetMode() MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return MiTransportAdminMessage_GroupMembershipAddModeChanged_UNSET
}

type MiTransportAdminMessage_GroupAdminChanged struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	TargetUserID  []string                                          `protobuf:"bytes,1,rep,name=targetUserID" json:"targetUserID,omitempty"`
	Action        *MiTransportAdminMessage_GroupAdminChanged_Action `protobuf:"varint,2,opt,name=action,enum=WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage_GroupAdminChanged_Action" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_GroupAdminChanged) Reset() {
	*x = MiTransportAdminMessage_GroupAdminChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_GroupAdminChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_GroupAdminChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_GroupAdminChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_GroupAdminChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_GroupAdminChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 4}
}

func (x *MiTransportAdminMessage_GroupAdminChanged) GetTargetUserID() []string {
	if x != nil {
		return x.TargetUserID
	}
	return nil
}

func (x *MiTransportAdminMessage_GroupAdminChanged) GetAction() MiTransportAdminMessage_GroupAdminChanged_Action {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return MiTransportAdminMessage_GroupAdminChanged_UNSET
}

type MiTransportAdminMessage_GroupParticipantChanged struct {
	state         protoimpl.MessageState                                  `protogen:"open.v1"`
	TargetUserID  []string                                                `protobuf:"bytes,1,rep,name=targetUserID" json:"targetUserID,omitempty"`
	Action        *MiTransportAdminMessage_GroupParticipantChanged_Action `protobuf:"varint,2,opt,name=action,enum=WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage_GroupParticipantChanged_Action" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_GroupParticipantChanged) Reset() {
	*x = MiTransportAdminMessage_GroupParticipantChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_GroupParticipantChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_GroupParticipantChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_GroupParticipantChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_GroupParticipantChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_GroupParticipantChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 5}
}

func (x *MiTransportAdminMessage_GroupParticipantChanged) GetTargetUserID() []string {
	if x != nil {
		return x.TargetUserID
	}
	return nil
}

func (x *MiTransportAdminMessage_GroupParticipantChanged) GetAction() MiTransportAdminMessage_GroupParticipantChanged_Action {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return MiTransportAdminMessage_GroupParticipantChanged_UNSET
}

type MiTransportAdminMessage_XmatUnpinMessageV2 struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PinnedMessageID *string                `protobuf:"bytes,1,opt,name=pinnedMessageID" json:"pinnedMessageID,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatUnpinMessageV2) Reset() {
	*x = MiTransportAdminMessage_XmatUnpinMessageV2{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatUnpinMessageV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatUnpinMessageV2) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatUnpinMessageV2) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatUnpinMessageV2.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatUnpinMessageV2) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 6}
}

func (x *MiTransportAdminMessage_XmatUnpinMessageV2) GetPinnedMessageID() string {
	if x != nil && x.PinnedMessageID != nil {
		return *x.PinnedMessageID
	}
	return ""
}

type MiTransportAdminMessage_XmatPinMessageV2 struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PinnedMessageID *string                `protobuf:"bytes,1,opt,name=pinnedMessageID" json:"pinnedMessageID,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatPinMessageV2) Reset() {
	*x = MiTransportAdminMessage_XmatPinMessageV2{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatPinMessageV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatPinMessageV2) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatPinMessageV2) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatPinMessageV2.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatPinMessageV2) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 7}
}

func (x *MiTransportAdminMessage_XmatPinMessageV2) GetPinnedMessageID() string {
	if x != nil && x.PinnedMessageID != nil {
		return *x.PinnedMessageID
	}
	return ""
}

type MiTransportAdminMessage_XmatUpdatePayments struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ReceiverName      *string                `protobuf:"bytes,1,opt,name=receiverName" json:"receiverName,omitempty"`
	SenderName        *string                `protobuf:"bytes,2,opt,name=senderName" json:"senderName,omitempty"`
	Amount            *float32               `protobuf:"fixed32,3,opt,name=amount" json:"amount,omitempty"`
	TransactionID     *int64                 `protobuf:"varint,4,opt,name=transactionID" json:"transactionID,omitempty"`
	TransactionStatus *int32                 `protobuf:"varint,5,opt,name=transactionStatus" json:"transactionStatus,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatUpdatePayments) Reset() {
	*x = MiTransportAdminMessage_XmatUpdatePayments{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatUpdatePayments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatUpdatePayments) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatUpdatePayments) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatUpdatePayments.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatUpdatePayments) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 8}
}

func (x *MiTransportAdminMessage_XmatUpdatePayments) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatUpdatePayments) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatUpdatePayments) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatUpdatePayments) GetTransactionID() int64 {
	if x != nil && x.TransactionID != nil {
		return *x.TransactionID
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatUpdatePayments) GetTransactionStatus() int32 {
	if x != nil && x.TransactionStatus != nil {
		return *x.TransactionStatus
	}
	return 0
}

type MiTransportAdminMessage_XmatThreadQuickReaction struct {
	state                               protoimpl.MessageState `protogen:"open.v1"`
	ThreadQuickReactionEmoji            *string                `protobuf:"bytes,1,opt,name=threadQuickReactionEmoji" json:"threadQuickReactionEmoji,omitempty"`
	ThreadQuickReactionInstructionKeyID *string                `protobuf:"bytes,2,opt,name=threadQuickReactionInstructionKeyID" json:"threadQuickReactionInstructionKeyID,omitempty"`
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatThreadQuickReaction) Reset() {
	*x = MiTransportAdminMessage_XmatThreadQuickReaction{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatThreadQuickReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatThreadQuickReaction) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatThreadQuickReaction) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatThreadQuickReaction.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatThreadQuickReaction) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 9}
}

func (x *MiTransportAdminMessage_XmatThreadQuickReaction) GetThreadQuickReactionEmoji() string {
	if x != nil && x.ThreadQuickReactionEmoji != nil {
		return *x.ThreadQuickReactionEmoji
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatThreadQuickReaction) GetThreadQuickReactionInstructionKeyID() string {
	if x != nil && x.ThreadQuickReactionInstructionKeyID != nil {
		return *x.ThreadQuickReactionInstructionKeyID
	}
	return ""
}

type MiTransportAdminMessage_XmatThreadNickname struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParticipantID *int64                 `protobuf:"varint,1,opt,name=participantID" json:"participantID,omitempty"`
	Nickname      *string                `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatThreadNickname) Reset() {
	*x = MiTransportAdminMessage_XmatThreadNickname{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatThreadNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatThreadNickname) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatThreadNickname) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatThreadNickname.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatThreadNickname) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 10}
}

func (x *MiTransportAdminMessage_XmatThreadNickname) GetParticipantID() int64 {
	if x != nil && x.ParticipantID != nil {
		return *x.ParticipantID
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatThreadNickname) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

type MiTransportAdminMessage_XmatThreadIcon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadIcon    *string                `protobuf:"bytes,1,opt,name=threadIcon" json:"threadIcon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatThreadIcon) Reset() {
	*x = MiTransportAdminMessage_XmatThreadIcon{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatThreadIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatThreadIcon) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatThreadIcon) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatThreadIcon.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatThreadIcon) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 11}
}

func (x *MiTransportAdminMessage_XmatThreadIcon) GetThreadIcon() string {
	if x != nil && x.ThreadIcon != nil {
		return *x.ThreadIcon
	}
	return ""
}

type MiTransportAdminMessage_XmatThemeColor struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ThemeID               *string                `protobuf:"bytes,1,opt,name=themeID" json:"themeID,omitempty"`
	ThemeColor            *string                `protobuf:"bytes,2,opt,name=themeColor" json:"themeColor,omitempty"`
	Gradient              []string               `protobuf:"bytes,3,rep,name=gradient" json:"gradient,omitempty"`
	ShouldShowIcon        *bool                  `protobuf:"varint,4,opt,name=shouldShowIcon" json:"shouldShowIcon,omitempty"`
	ThemeType             *int32                 `protobuf:"varint,5,opt,name=themeType" json:"themeType,omitempty"`
	AccessibilityLabel    *string                `protobuf:"bytes,6,opt,name=accessibilityLabel" json:"accessibilityLabel,omitempty"`
	ThemeNameWithSubtitle *string                `protobuf:"bytes,7,opt,name=themeNameWithSubtitle" json:"themeNameWithSubtitle,omitempty"`
	ThemeEmoji            *string                `protobuf:"bytes,8,opt,name=themeEmoji" json:"themeEmoji,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatThemeColor) Reset() {
	*x = MiTransportAdminMessage_XmatThemeColor{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatThemeColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatThemeColor) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatThemeColor) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatThemeColor.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatThemeColor) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 12}
}

func (x *MiTransportAdminMessage_XmatThemeColor) GetThemeID() string {
	if x != nil && x.ThemeID != nil {
		return *x.ThemeID
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatThemeColor) GetThemeColor() string {
	if x != nil && x.ThemeColor != nil {
		return *x.ThemeColor
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatThemeColor) GetGradient() []string {
	if x != nil {
		return x.Gradient
	}
	return nil
}

func (x *MiTransportAdminMessage_XmatThemeColor) GetShouldShowIcon() bool {
	if x != nil && x.ShouldShowIcon != nil {
		return *x.ShouldShowIcon
	}
	return false
}

func (x *MiTransportAdminMessage_XmatThemeColor) GetThemeType() int32 {
	if x != nil && x.ThemeType != nil {
		return *x.ThemeType
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatThemeColor) GetAccessibilityLabel() string {
	if x != nil && x.AccessibilityLabel != nil {
		return *x.AccessibilityLabel
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatThemeColor) GetThemeNameWithSubtitle() string {
	if x != nil && x.ThemeNameWithSubtitle != nil {
		return *x.ThemeNameWithSubtitle
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatThemeColor) GetThemeEmoji() string {
	if x != nil && x.ThemeEmoji != nil {
		return *x.ThemeEmoji
	}
	return ""
}

type MiTransportAdminMessage_XmatMessengerSharedAlbum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XmaDataclass  *string                `protobuf:"bytes,1,opt,name=xmaDataclass" json:"xmaDataclass,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbum) Reset() {
	*x = MiTransportAdminMessage_XmatMessengerSharedAlbum{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbum) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMessengerSharedAlbum.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMessengerSharedAlbum) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 13}
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbum) GetXmaDataclass() string {
	if x != nil && x.XmaDataclass != nil {
		return *x.XmaDataclass
	}
	return ""
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumRename struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SharedAlbumID *int64                 `protobuf:"varint,1,opt,name=sharedAlbumID" json:"sharedAlbumID,omitempty"`
	OldAlbumTitle *string                `protobuf:"bytes,2,opt,name=oldAlbumTitle" json:"oldAlbumTitle,omitempty"`
	NewAlbumTitle *string                `protobuf:"bytes,3,opt,name=newAlbumTitle" json:"newAlbumTitle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumRename) Reset() {
	*x = MiTransportAdminMessage_XmatMessengerSharedAlbumRename{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumRename) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumRename) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMessengerSharedAlbumRename.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMessengerSharedAlbumRename) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 14}
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumRename) GetSharedAlbumID() int64 {
	if x != nil && x.SharedAlbumID != nil {
		return *x.SharedAlbumID
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumRename) GetOldAlbumTitle() string {
	if x != nil && x.OldAlbumTitle != nil {
		return *x.OldAlbumTitle
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumRename) GetNewAlbumTitle() string {
	if x != nil && x.NewAlbumTitle != nil {
		return *x.NewAlbumTitle
	}
	return ""
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SharedAlbumID *int64                 `protobuf:"varint,1,opt,name=sharedAlbumID" json:"sharedAlbumID,omitempty"`
	AlbumTitle    *string                `protobuf:"bytes,2,opt,name=albumTitle" json:"albumTitle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion) Reset() {
	*x = MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 15}
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion) GetSharedAlbumID() int64 {
	if x != nil && x.SharedAlbumID != nil {
		return *x.SharedAlbumID
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion) GetAlbumTitle() string {
	if x != nil && x.AlbumTitle != nil {
		return *x.AlbumTitle
	}
	return ""
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval struct {
	state               protoimpl.MessageState                                                                `protogen:"open.v1"`
	SharedAlbumID       *int64                                                                                `protobuf:"varint,1,opt,name=sharedAlbumID" json:"sharedAlbumID,omitempty"`
	RemovedContentMap   []*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple `protobuf:"bytes,2,rep,name=removedContentMap" json:"removedContentMap,omitempty"`
	RemovedContentCount *int64                                                                                `protobuf:"varint,3,opt,name=removedContentCount" json:"removedContentCount,omitempty"`
	AlbumTitle          *string                                                                               `protobuf:"bytes,4,opt,name=albumTitle" json:"albumTitle,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) Reset() {
	*x = MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 16}
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) GetSharedAlbumID() int64 {
	if x != nil && x.SharedAlbumID != nil {
		return *x.SharedAlbumID
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) GetRemovedContentMap() []*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple {
	if x != nil {
		return x.RemovedContentMap
	}
	return nil
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) GetRemovedContentCount() int64 {
	if x != nil && x.RemovedContentCount != nil {
		return *x.RemovedContentCount
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval) GetAlbumTitle() string {
	if x != nil && x.AlbumTitle != nil {
		return *x.AlbumTitle
	}
	return ""
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumAddition struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SharedAlbumID    *int64                 `protobuf:"varint,1,opt,name=sharedAlbumID" json:"sharedAlbumID,omitempty"`
	AlbumTitle       *string                `protobuf:"bytes,2,opt,name=albumTitle" json:"albumTitle,omitempty"`
	NumOfAttachments *int64                 `protobuf:"varint,3,opt,name=numOfAttachments" json:"numOfAttachments,omitempty"`
	IsAlbumCreation  *bool                  `protobuf:"varint,4,opt,name=isAlbumCreation" json:"isAlbumCreation,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) Reset() {
	*x = MiTransportAdminMessage_XmatMessengerSharedAlbumAddition{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMessengerSharedAlbumAddition.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 17}
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) GetSharedAlbumID() int64 {
	if x != nil && x.SharedAlbumID != nil {
		return *x.SharedAlbumID
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) GetAlbumTitle() string {
	if x != nil && x.AlbumTitle != nil {
		return *x.AlbumTitle
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) GetNumOfAttachments() int64 {
	if x != nil && x.NumOfAttachments != nil {
		return *x.NumOfAttachments
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumAddition) GetIsAlbumCreation() bool {
	if x != nil && x.IsAlbumCreation != nil {
		return *x.IsAlbumCreation
	}
	return false
}

type MiTransportAdminMessage_XmatMessengerQRCodeScanned struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReceiverName  *string                `protobuf:"bytes,1,opt,name=receiverName" json:"receiverName,omitempty"`
	SenderName    *string                `protobuf:"bytes,2,opt,name=senderName" json:"senderName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMessengerQRCodeScanned) Reset() {
	*x = MiTransportAdminMessage_XmatMessengerQRCodeScanned{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMessengerQRCodeScanned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMessengerQRCodeScanned) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatMessengerQRCodeScanned) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMessengerQRCodeScanned.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMessengerQRCodeScanned) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 18}
}

func (x *MiTransportAdminMessage_XmatMessengerQRCodeScanned) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatMessengerQRCodeScanned) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

type MiTransportAdminMessage_XmatMessagingLimitSharing struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SenderName       *string                `protobuf:"bytes,1,opt,name=senderName" json:"senderName,omitempty"`
	SenderID         *string                `protobuf:"bytes,2,opt,name=senderID" json:"senderID,omitempty"`
	LimitSharingType *string                `protobuf:"bytes,3,opt,name=limitSharingType" json:"limitSharingType,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMessagingLimitSharing) Reset() {
	*x = MiTransportAdminMessage_XmatMessagingLimitSharing{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMessagingLimitSharing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMessagingLimitSharing) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatMessagingLimitSharing) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMessagingLimitSharing.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMessagingLimitSharing) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 19}
}

func (x *MiTransportAdminMessage_XmatMessagingLimitSharing) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatMessagingLimitSharing) GetSenderID() string {
	if x != nil && x.SenderID != nil {
		return *x.SenderID
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatMessagingLimitSharing) GetLimitSharingType() string {
	if x != nil && x.LimitSharingType != nil {
		return *x.LimitSharingType
	}
	return ""
}

type MiTransportAdminMessage_XmatMagicWords struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	NewMagicWordCount     *int64                 `protobuf:"varint,1,opt,name=newMagicWordCount" json:"newMagicWordCount,omitempty"`
	RemovedMagicWordCount *int64                 `protobuf:"varint,2,opt,name=removedMagicWordCount" json:"removedMagicWordCount,omitempty"`
	MagicWord             *string                `protobuf:"bytes,3,opt,name=magicWord" json:"magicWord,omitempty"`
	EmojiEffect           *string                `protobuf:"bytes,4,opt,name=emojiEffect" json:"emojiEffect,omitempty"`
	IsAllEdited           *bool                  `protobuf:"varint,5,opt,name=isAllEdited" json:"isAllEdited,omitempty"`
	ThemeName             *string                `protobuf:"bytes,6,opt,name=themeName" json:"themeName,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMagicWords) Reset() {
	*x = MiTransportAdminMessage_XmatMagicWords{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMagicWords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMagicWords) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatMagicWords) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMagicWords.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMagicWords) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 20}
}

func (x *MiTransportAdminMessage_XmatMagicWords) GetNewMagicWordCount() int64 {
	if x != nil && x.NewMagicWordCount != nil {
		return *x.NewMagicWordCount
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMagicWords) GetRemovedMagicWordCount() int64 {
	if x != nil && x.RemovedMagicWordCount != nil {
		return *x.RemovedMagicWordCount
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMagicWords) GetMagicWord() string {
	if x != nil && x.MagicWord != nil {
		return *x.MagicWord
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatMagicWords) GetEmojiEffect() string {
	if x != nil && x.EmojiEffect != nil {
		return *x.EmojiEffect
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatMagicWords) GetIsAllEdited() bool {
	if x != nil && x.IsAllEdited != nil {
		return *x.IsAllEdited
	}
	return false
}

func (x *MiTransportAdminMessage_XmatMagicWords) GetThemeName() string {
	if x != nil && x.ThemeName != nil {
		return *x.ThemeName
	}
	return ""
}

type MiTransportAdminMessage_XmatLinkCTA struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	LinkCtaXmatPrimaryText       *string                `protobuf:"bytes,1,opt,name=linkCtaXmatPrimaryText" json:"linkCtaXmatPrimaryText,omitempty"`
	LinkCtaXmatCtaText           *string                `protobuf:"bytes,2,opt,name=linkCtaXmatCtaText" json:"linkCtaXmatCtaText,omitempty"`
	LinkCtaXmatCtaURL            *string                `protobuf:"bytes,3,opt,name=linkCtaXmatCtaURL" json:"linkCtaXmatCtaURL,omitempty"`
	LinkCtaXmatCtaIosURL         *string                `protobuf:"bytes,4,opt,name=linkCtaXmatCtaIosURL" json:"linkCtaXmatCtaIosURL,omitempty"`
	AndroidUri                   *string                `protobuf:"bytes,5,opt,name=androidUri" json:"androidUri,omitempty"`
	AsyncURL                     *string                `protobuf:"bytes,6,opt,name=asyncURL" json:"asyncURL,omitempty"`
	WwwIsAsyncURL                *bool                  `protobuf:"varint,7,opt,name=wwwIsAsyncURL" json:"wwwIsAsyncURL,omitempty"`
	MsiteEnabled                 *bool                  `protobuf:"varint,8,opt,name=msiteEnabled" json:"msiteEnabled,omitempty"`
	HideUriInFallback            *bool                  `protobuf:"varint,9,opt,name=hideUriInFallback" json:"hideUriInFallback,omitempty"`
	ShowConfirmationDialog       *bool                  `protobuf:"varint,10,opt,name=showConfirmationDialog" json:"showConfirmationDialog,omitempty"`
	GraphPayload                 *string                `protobuf:"bytes,11,opt,name=graphPayload" json:"graphPayload,omitempty"`
	IdentifierName               *string                `protobuf:"bytes,12,opt,name=identifierName" json:"identifierName,omitempty"`
	ThreadID                     *string                `protobuf:"bytes,13,opt,name=threadID" json:"threadID,omitempty"`
	HideCtaInFallback            *bool                  `protobuf:"varint,14,opt,name=hideCtaInFallback" json:"hideCtaInFallback,omitempty"`
	CtxAdConversationStarterInfo *string                `protobuf:"bytes,15,opt,name=ctxAdConversationStarterInfo" json:"ctxAdConversationStarterInfo,omitempty"`
	FbmUri                       *string                `protobuf:"bytes,16,opt,name=fbmUri" json:"fbmUri,omitempty"`
	InitiatorUserID              *string                `protobuf:"bytes,17,opt,name=initiatorUserID" json:"initiatorUserID,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatLinkCTA) Reset() {
	*x = MiTransportAdminMessage_XmatLinkCTA{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatLinkCTA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatLinkCTA) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatLinkCTA) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatLinkCTA.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatLinkCTA) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 21}
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetLinkCtaXmatPrimaryText() string {
	if x != nil && x.LinkCtaXmatPrimaryText != nil {
		return *x.LinkCtaXmatPrimaryText
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetLinkCtaXmatCtaText() string {
	if x != nil && x.LinkCtaXmatCtaText != nil {
		return *x.LinkCtaXmatCtaText
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetLinkCtaXmatCtaURL() string {
	if x != nil && x.LinkCtaXmatCtaURL != nil {
		return *x.LinkCtaXmatCtaURL
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetLinkCtaXmatCtaIosURL() string {
	if x != nil && x.LinkCtaXmatCtaIosURL != nil {
		return *x.LinkCtaXmatCtaIosURL
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetAndroidUri() string {
	if x != nil && x.AndroidUri != nil {
		return *x.AndroidUri
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetAsyncURL() string {
	if x != nil && x.AsyncURL != nil {
		return *x.AsyncURL
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetWwwIsAsyncURL() bool {
	if x != nil && x.WwwIsAsyncURL != nil {
		return *x.WwwIsAsyncURL
	}
	return false
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetMsiteEnabled() bool {
	if x != nil && x.MsiteEnabled != nil {
		return *x.MsiteEnabled
	}
	return false
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetHideUriInFallback() bool {
	if x != nil && x.HideUriInFallback != nil {
		return *x.HideUriInFallback
	}
	return false
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetShowConfirmationDialog() bool {
	if x != nil && x.ShowConfirmationDialog != nil {
		return *x.ShowConfirmationDialog
	}
	return false
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetGraphPayload() string {
	if x != nil && x.GraphPayload != nil {
		return *x.GraphPayload
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetIdentifierName() string {
	if x != nil && x.IdentifierName != nil {
		return *x.IdentifierName
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetThreadID() string {
	if x != nil && x.ThreadID != nil {
		return *x.ThreadID
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetHideCtaInFallback() bool {
	if x != nil && x.HideCtaInFallback != nil {
		return *x.HideCtaInFallback
	}
	return false
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetCtxAdConversationStarterInfo() string {
	if x != nil && x.CtxAdConversationStarterInfo != nil {
		return *x.CtxAdConversationStarterInfo
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetFbmUri() string {
	if x != nil && x.FbmUri != nil {
		return *x.FbmUri
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatLinkCTA) GetInitiatorUserID() string {
	if x != nil && x.InitiatorUserID != nil {
		return *x.InitiatorUserID
	}
	return ""
}

type MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	SenderName                  *string                `protobuf:"bytes,1,opt,name=senderName" json:"senderName,omitempty"`
	MuteManagementAdminTextType *string                `protobuf:"bytes,2,opt,name=muteManagementAdminTextType" json:"muteManagementAdminTextType,omitempty"`
	GameName                    *string                `protobuf:"bytes,3,opt,name=gameName" json:"gameName,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate) Reset() {
	*x = MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 22}
}

func (x *MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate) GetMuteManagementAdminTextType() string {
	if x != nil && x.MuteManagementAdminTextType != nil {
		return *x.MuteManagementAdminTextType
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate) GetGameName() string {
	if x != nil && x.GameName != nil {
		return *x.GameName
	}
	return ""
}

type MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OtherUserName  *string                `protobuf:"bytes,1,opt,name=otherUserName" json:"otherUserName,omitempty"`
	IsTurnOnCohort *string                `protobuf:"bytes,2,opt,name=isTurnOnCohort" json:"isTurnOnCohort,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted) Reset() {
	*x = MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 23}
}

func (x *MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted) GetOtherUserName() string {
	if x != nil && x.OtherUserName != nil {
		return *x.OtherUserName
	}
	return ""
}

func (x *MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted) GetIsTurnOnCohort() string {
	if x != nil && x.IsTurnOnCohort != nil {
		return *x.IsTurnOnCohort
	}
	return ""
}

type MiTransportAdminMessage_XmatDisappearingSetting struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	DisappearingSettingTime      *int64                 `protobuf:"varint,1,opt,name=disappearingSettingTime" json:"disappearingSettingTime,omitempty"`
	OldDisappearingSettingTime   *int64                 `protobuf:"varint,2,opt,name=oldDisappearingSettingTime" json:"oldDisappearingSettingTime,omitempty"`
	DisappearingSettingActorFbid *int64                 `protobuf:"varint,3,opt,name=disappearingSettingActorFbid" json:"disappearingSettingActorFbid,omitempty"`
	NewEphemeralityType          *int64                 `protobuf:"varint,4,opt,name=newEphemeralityType" json:"newEphemeralityType,omitempty"`
	OldEphemeralityType          *int64                 `protobuf:"varint,5,opt,name=oldEphemeralityType" json:"oldEphemeralityType,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatDisappearingSetting) Reset() {
	*x = MiTransportAdminMessage_XmatDisappearingSetting{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatDisappearingSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatDisappearingSetting) ProtoMessage() {}

func (x *MiTransportAdminMessage_XmatDisappearingSetting) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatDisappearingSetting.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatDisappearingSetting) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 24}
}

func (x *MiTransportAdminMessage_XmatDisappearingSetting) GetDisappearingSettingTime() int64 {
	if x != nil && x.DisappearingSettingTime != nil {
		return *x.DisappearingSettingTime
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatDisappearingSetting) GetOldDisappearingSettingTime() int64 {
	if x != nil && x.OldDisappearingSettingTime != nil {
		return *x.OldDisappearingSettingTime
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatDisappearingSetting) GetDisappearingSettingActorFbid() int64 {
	if x != nil && x.DisappearingSettingActorFbid != nil {
		return *x.DisappearingSettingActorFbid
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatDisappearingSetting) GetNewEphemeralityType() int64 {
	if x != nil && x.NewEphemeralityType != nil {
		return *x.NewEphemeralityType
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatDisappearingSetting) GetOldEphemeralityType() int64 {
	if x != nil && x.OldEphemeralityType != nil {
		return *x.OldEphemeralityType
	}
	return 0
}

type MiTransportAdminMessage_DisappearingSettingChanged struct {
	state                                 protoimpl.MessageState `protogen:"open.v1"`
	DisappearingSettingDurationSeconds    *int32                 `protobuf:"varint,1,opt,name=disappearingSettingDurationSeconds" json:"disappearingSettingDurationSeconds,omitempty"`
	OldDisappearingSettingDurationSeconds *int32                 `protobuf:"varint,2,opt,name=oldDisappearingSettingDurationSeconds" json:"oldDisappearingSettingDurationSeconds,omitempty"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_DisappearingSettingChanged) Reset() {
	*x = MiTransportAdminMessage_DisappearingSettingChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_DisappearingSettingChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_DisappearingSettingChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_DisappearingSettingChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_DisappearingSettingChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_DisappearingSettingChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 25}
}

func (x *MiTransportAdminMessage_DisappearingSettingChanged) GetDisappearingSettingDurationSeconds() int32 {
	if x != nil && x.DisappearingSettingDurationSeconds != nil {
		return *x.DisappearingSettingDurationSeconds
	}
	return 0
}

func (x *MiTransportAdminMessage_DisappearingSettingChanged) GetOldDisappearingSettingDurationSeconds() int32 {
	if x != nil && x.OldDisappearingSettingDurationSeconds != nil {
		return *x.OldDisappearingSettingDurationSeconds
	}
	return 0
}

type MiTransportAdminMessage_IconChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadIcon    *string                `protobuf:"bytes,1,opt,name=threadIcon" json:"threadIcon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_IconChanged) Reset() {
	*x = MiTransportAdminMessage_IconChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_IconChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_IconChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_IconChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_IconChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_IconChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 26}
}

func (x *MiTransportAdminMessage_IconChanged) GetThreadIcon() string {
	if x != nil && x.ThreadIcon != nil {
		return *x.ThreadIcon
	}
	return ""
}

type MiTransportAdminMessage_LinkCta struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*MiTransportAdminMessage_LinkCta_UkOsaAdminText_
	Content       isMiTransportAdminMessage_LinkCta_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_LinkCta) Reset() {
	*x = MiTransportAdminMessage_LinkCta{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_LinkCta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_LinkCta) ProtoMessage() {}

func (x *MiTransportAdminMessage_LinkCta) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_LinkCta.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_LinkCta) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 27}
}

func (x *MiTransportAdminMessage_LinkCta) GetContent() isMiTransportAdminMessage_LinkCta_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MiTransportAdminMessage_LinkCta) GetUkOsaAdminText() *MiTransportAdminMessage_LinkCta_UkOsaAdminText {
	if x != nil {
		if x, ok := x.Content.(*MiTransportAdminMessage_LinkCta_UkOsaAdminText_); ok {
			return x.UkOsaAdminText
		}
	}
	return nil
}

type isMiTransportAdminMessage_LinkCta_Content interface {
	isMiTransportAdminMessage_LinkCta_Content()
}

type MiTransportAdminMessage_LinkCta_UkOsaAdminText_ struct {
	UkOsaAdminText *MiTransportAdminMessage_LinkCta_UkOsaAdminText `protobuf:"bytes,1,opt,name=ukOsaAdminText,oneof"`
}

func (*MiTransportAdminMessage_LinkCta_UkOsaAdminText_) isMiTransportAdminMessage_LinkCta_Content() {}

type MiTransportAdminMessage_QuickReactionChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmojiName     *string                `protobuf:"bytes,1,opt,name=emojiName" json:"emojiName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_QuickReactionChanged) Reset() {
	*x = MiTransportAdminMessage_QuickReactionChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_QuickReactionChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_QuickReactionChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_QuickReactionChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_QuickReactionChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_QuickReactionChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 28}
}

func (x *MiTransportAdminMessage_QuickReactionChanged) GetEmojiName() string {
	if x != nil && x.EmojiName != nil {
		return *x.EmojiName
	}
	return ""
}

type MiTransportAdminMessage_GroupNameChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupName     *string                `protobuf:"bytes,1,opt,name=groupName" json:"groupName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_GroupNameChanged) Reset() {
	*x = MiTransportAdminMessage_GroupNameChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_GroupNameChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_GroupNameChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_GroupNameChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_GroupNameChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_GroupNameChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 29}
}

func (x *MiTransportAdminMessage_GroupNameChanged) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

type MiTransportAdminMessage_NicknameChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetUserID  *string                `protobuf:"bytes,1,opt,name=targetUserID" json:"targetUserID,omitempty"`
	Nickname      *string                `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_NicknameChanged) Reset() {
	*x = MiTransportAdminMessage_NicknameChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_NicknameChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_NicknameChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_NicknameChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_NicknameChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_NicknameChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 30}
}

func (x *MiTransportAdminMessage_NicknameChanged) GetTargetUserID() string {
	if x != nil && x.TargetUserID != nil {
		return *x.TargetUserID
	}
	return ""
}

func (x *MiTransportAdminMessage_NicknameChanged) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

type MiTransportAdminMessage_ChatThemeChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThemeName     *string                `protobuf:"bytes,1,opt,name=themeName" json:"themeName,omitempty"`
	ThemeEmoji    *string                `protobuf:"bytes,2,opt,name=themeEmoji" json:"themeEmoji,omitempty"`
	ThemeType     *int32                 `protobuf:"varint,3,opt,name=themeType" json:"themeType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_ChatThemeChanged) Reset() {
	*x = MiTransportAdminMessage_ChatThemeChanged{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_ChatThemeChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_ChatThemeChanged) ProtoMessage() {}

func (x *MiTransportAdminMessage_ChatThemeChanged) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_ChatThemeChanged.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_ChatThemeChanged) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 31}
}

func (x *MiTransportAdminMessage_ChatThemeChanged) GetThemeName() string {
	if x != nil && x.ThemeName != nil {
		return *x.ThemeName
	}
	return ""
}

func (x *MiTransportAdminMessage_ChatThemeChanged) GetThemeEmoji() string {
	if x != nil && x.ThemeEmoji != nil {
		return *x.ThemeEmoji
	}
	return ""
}

func (x *MiTransportAdminMessage_ChatThemeChanged) GetThemeType() int32 {
	if x != nil && x.ThemeType != nil {
		return *x.ThemeType
	}
	return 0
}

type MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *int64                 `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple) Reset() {
	*x = MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple) ProtoMessage() {
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 16, 0}
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple) GetKey() int64 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type MiTransportAdminMessage_LinkCta_UkOsaAdminText struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InitiatorUserID *string                `protobuf:"bytes,2,opt,name=initiatorUserID" json:"initiatorUserID,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MiTransportAdminMessage_LinkCta_UkOsaAdminText) Reset() {
	*x = MiTransportAdminMessage_LinkCta_UkOsaAdminText{}
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiTransportAdminMessage_LinkCta_UkOsaAdminText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiTransportAdminMessage_LinkCta_UkOsaAdminText) ProtoMessage() {}

func (x *MiTransportAdminMessage_LinkCta_UkOsaAdminText) ProtoReflect() protoreflect.Message {
	mi := &file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiTransportAdminMessage_LinkCta_UkOsaAdminText.ProtoReflect.Descriptor instead.
func (*MiTransportAdminMessage_LinkCta_UkOsaAdminText) Descriptor() ([]byte, []int) {
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP(), []int{0, 27, 0}
}

func (x *MiTransportAdminMessage_LinkCta_UkOsaAdminText) GetInitiatorUserID() string {
	if x != nil && x.InitiatorUserID != nil {
		return *x.InitiatorUserID
	}
	return ""
}

var File_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto protoreflect.FileDescriptor

const file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDesc = "" +
	"\n" +
	"KwaArmadilloMiTransportAdminMessage/WAArmadilloMiTransportAdminMessage.proto\x12\"WAArmadilloMiTransportAdminMessage\"\xacO\n" +
	"\x17MiTransportAdminMessage\x12z\n" +
	"\x10chatThemeChanged\x18\x01 \x01(\v2L.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.ChatThemeChangedH\x00R\x10chatThemeChanged\x12w\n" +
	"\x0fnicknameChanged\x18\x02 \x01(\v2K.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.NicknameChangedH\x00R\x0fnicknameChanged\x12\x8f\x01\n" +
	"\x17groupParticipantChanged\x18\x03 \x01(\v2S.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupParticipantChangedH\x00R\x17groupParticipantChanged\x12}\n" +
	"\x11groupAdminChanged\x18\x04 \x01(\v2M.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupAdminChangedH\x00R\x11groupAdminChanged\x12z\n" +
	"\x10groupNameChanged\x18\x05 \x01(\v2L.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupNameChangedH\x00R\x10groupNameChanged\x12\xa1\x01\n" +
	"\x1dgroupMembershipAddModeChanged\x18\x06 \x01(\v2Y.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupMembershipAddModeChangedH\x00R\x1dgroupMembershipAddModeChanged\x12q\n" +
	"\rmessagePinned\x18\a \x01(\v2I.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.MessagePinnedH\x00R\rmessagePinned\x12}\n" +
	"\x11groupImageChanged\x18\b \x01(\v2M.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupImageChangedH\x00R\x11groupImageChanged\x12\x86\x01\n" +
	"\x14quickReactionChanged\x18\t \x01(\v2P.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.QuickReactionChangedH\x00R\x14quickReactionChanged\x12_\n" +
	"\alinkCta\x18\n" +
	" \x01(\v2C.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LinkCtaH\x00R\alinkCta\x12k\n" +
	"\viconChanged\x18\v \x01(\v2G.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.IconChangedH\x00R\viconChanged\x12\x98\x01\n" +
	"\x1adisappearingSettingChanged\x18\f \x01(\v2V.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.DisappearingSettingChangedH\x00R\x1adisappearingSettingChanged\x12\x83\x01\n" +
	"\x13limitSharingChanged\x18\r \x01(\v2O.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LimitSharingChangedH\x00R\x13limitSharingChanged\x12\x8f\x01\n" +
	"\x17xmatDisappearingSetting\x18\x0e \x01(\v2S.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatDisappearingSettingH\x00R\x17xmatDisappearingSetting\x12\xb3\x01\n" +
	"#xmatFriendRequestConfirmedEncrypted\x18\x0f \x01(\v2_.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatFriendRequestConfirmedEncryptedH\x00R#xmatFriendRequestConfirmedEncrypted\x12\xcb\x01\n" +
	"+xmatInstantGameEncryptedDynamicCustomUpdate\x18\x10 \x01(\v2g.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatInstantGameEncryptedDynamicCustomUpdateH\x00R+xmatInstantGameEncryptedDynamicCustomUpdate\x12k\n" +
	"\vxmatLinkCta\x18\x11 \x01(\v2G.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatLinkCTAH\x00R\vxmatLinkCta\x12t\n" +
	"\x0exmatMagicWords\x18\x12 \x01(\v2J.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMagicWordsH\x00R\x0exmatMagicWords\x12\x95\x01\n" +
	"\x19xmatMessagingLimitSharing\x18\x13 \x01(\v2U.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessagingLimitSharingH\x00R\x19xmatMessagingLimitSharing\x12\x98\x01\n" +
	"\x1axmatMessengerQrCodeScanned\x18\x14 \x01(\v2V.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerQRCodeScannedH\x00R\x1axmatMessengerQrCodeScanned\x12\xaa\x01\n" +
	" xmatMessengerSharedAlbumAddition\x18\x15 \x01(\v2\\.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumAdditionH\x00R xmatMessengerSharedAlbumAddition\x12\xbc\x01\n" +
	"&xmatMessengerSharedAlbumContentRemoval\x18\x16 \x01(\v2b.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumContentRemovalH\x00R&xmatMessengerSharedAlbumContentRemoval\x12\xaa\x01\n" +
	" xmatMessengerSharedAlbumDeletion\x18\x17 \x01(\v2\\.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumDeletionH\x00R xmatMessengerSharedAlbumDeletion\x12\xa4\x01\n" +
	"\x1exmatMessengerSharedAlbumRename\x18\x18 \x01(\v2Z.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumRenameH\x00R\x1exmatMessengerSharedAlbumRename\x12\x92\x01\n" +
	"\x18xmatMessengerSharedAlbum\x18\x19 \x01(\v2T.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumH\x00R\x18xmatMessengerSharedAlbum\x12t\n" +
	"\x0exmatThemeColor\x18\x1a \x01(\v2J.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThemeColorH\x00R\x0exmatThemeColor\x12t\n" +
	"\x0exmatThreadIcon\x18\x1b \x01(\v2J.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadIconH\x00R\x0exmatThreadIcon\x12\x80\x01\n" +
	"\x12xmatThreadNickname\x18\x1c \x01(\v2N.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadNicknameH\x00R\x12xmatThreadNickname\x12\x8f\x01\n" +
	"\x17xmatThreadQuickReaction\x18\x1d \x01(\v2S.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadQuickReactionH\x00R\x17xmatThreadQuickReaction\x12\x80\x01\n" +
	"\x12xmatUpdatePayments\x18\x1e \x01(\v2N.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatUpdatePaymentsH\x00R\x12xmatUpdatePayments\x12z\n" +
	"\x10xmatPinMessageV2\x18\x1f \x01(\v2L.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatPinMessageV2H\x00R\x10xmatPinMessageV2\x12\x80\x01\n" +
	"\x12xmatUnpinMessageV2\x18  \x01(\v2N.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatUnpinMessageV2H\x00R\x12xmatUnpinMessageV2\x1a\xc9\x01\n" +
	"\x13LimitSharingChanged\x12}\n" +
	"\vsharingType\x18\x01 \x01(\x0e2[.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LimitSharingChanged.SharingTypeR\vsharingType\"3\n" +
	"\vSharingType\x12\t\n" +
	"\x05UNSET\x10\x00\x12\f\n" +
	"\bDISABLED\x10\x01\x12\v\n" +
	"\aENABLED\x10\x02\x1a\xb0\x01\n" +
	"\x11GroupImageChanged\x12l\n" +
	"\x06action\x18\x01 \x01(\x0e2T.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupImageChanged.ActionR\x06action\"-\n" +
	"\x06Action\x12\t\n" +
	"\x05UNSET\x10\x00\x12\v\n" +
	"\aCHANGED\x10\x01\x12\v\n" +
	"\aREMOVED\x10\x02\x1a\xa8\x01\n" +
	"\rMessagePinned\x12h\n" +
	"\x06action\x18\x01 \x01(\x0e2P.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.MessagePinned.ActionR\x06action\"-\n" +
	"\x06Action\x12\t\n" +
	"\x05UNSET\x10\x00\x12\n" +
	"\n" +
	"\x06PINNED\x10\x01\x12\f\n" +
	"\bUNPINNED\x10\x02\x1a\xc8\x01\n" +
	"\x1dGroupMembershipAddModeChanged\x12r\n" +
	"\x04mode\x18\x01 \x01(\x0e2^.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupMembershipAddModeChanged.ModeR\x04mode\"3\n" +
	"\x04Mode\x12\t\n" +
	"\x05UNSET\x10\x00\x12\x0f\n" +
	"\vALL_MEMBERS\x10\x01\x12\x0f\n" +
	"\vADMINS_ONLY\x10\x02\x1a\xd2\x01\n" +
	"\x11GroupAdminChanged\x12\"\n" +
	"\ftargetUserID\x18\x01 \x03(\tR\ftargetUserID\x12l\n" +
	"\x06action\x18\x02 \x01(\x0e2T.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupAdminChanged.ActionR\x06action\"+\n" +
	"\x06Action\x12\t\n" +
	"\x05UNSET\x10\x00\x12\t\n" +
	"\x05ADDED\x10\x01\x12\v\n" +
	"\aREMOVED\x10\x02\x1a\xde\x01\n" +
	"\x17GroupParticipantChanged\x12\"\n" +
	"\ftargetUserID\x18\x01 \x03(\tR\ftargetUserID\x12r\n" +
	"\x06action\x18\x02 \x01(\x0e2Z.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupParticipantChanged.ActionR\x06action\"+\n" +
	"\x06Action\x12\t\n" +
	"\x05UNSET\x10\x00\x12\t\n" +
	"\x05ADDED\x10\x01\x12\v\n" +
	"\aREMOVED\x10\x02\x1a>\n" +
	"\x12XmatUnpinMessageV2\x12(\n" +
	"\x0fpinnedMessageID\x18\x01 \x01(\tR\x0fpinnedMessageID\x1a<\n" +
	"\x10XmatPinMessageV2\x12(\n" +
	"\x0fpinnedMessageID\x18\x01 \x01(\tR\x0fpinnedMessageID\x1a\xc4\x01\n" +
	"\x12XmatUpdatePayments\x12\"\n" +
	"\freceiverName\x18\x01 \x01(\tR\freceiverName\x12\x1e\n" +
	"\n" +
	"senderName\x18\x02 \x01(\tR\n" +
	"senderName\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x02R\x06amount\x12$\n" +
	"\rtransactionID\x18\x04 \x01(\x03R\rtransactionID\x12,\n" +
	"\x11transactionStatus\x18\x05 \x01(\x05R\x11transactionStatus\x1a\xa7\x01\n" +
	"\x17XmatThreadQuickReaction\x12:\n" +
	"\x18threadQuickReactionEmoji\x18\x01 \x01(\tR\x18threadQuickReactionEmoji\x12P\n" +
	"#threadQuickReactionInstructionKeyID\x18\x02 \x01(\tR#threadQuickReactionInstructionKeyID\x1aV\n" +
	"\x12XmatThreadNickname\x12$\n" +
	"\rparticipantID\x18\x01 \x01(\x03R\rparticipantID\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\x1a0\n" +
	"\x0eXmatThreadIcon\x12\x1e\n" +
	"\n" +
	"threadIcon\x18\x01 \x01(\tR\n" +
	"threadIcon\x1a\xb2\x02\n" +
	"\x0eXmatThemeColor\x12\x18\n" +
	"\athemeID\x18\x01 \x01(\tR\athemeID\x12\x1e\n" +
	"\n" +
	"themeColor\x18\x02 \x01(\tR\n" +
	"themeColor\x12\x1a\n" +
	"\bgradient\x18\x03 \x03(\tR\bgradient\x12&\n" +
	"\x0eshouldShowIcon\x18\x04 \x01(\bR\x0eshouldShowIcon\x12\x1c\n" +
	"\tthemeType\x18\x05 \x01(\x05R\tthemeType\x12.\n" +
	"\x12accessibilityLabel\x18\x06 \x01(\tR\x12accessibilityLabel\x124\n" +
	"\x15themeNameWithSubtitle\x18\a \x01(\tR\x15themeNameWithSubtitle\x12\x1e\n" +
	"\n" +
	"themeEmoji\x18\b \x01(\tR\n" +
	"themeEmoji\x1a>\n" +
	"\x18XmatMessengerSharedAlbum\x12\"\n" +
	"\fxmaDataclass\x18\x01 \x01(\tR\fxmaDataclass\x1a\x92\x01\n" +
	"\x1eXmatMessengerSharedAlbumRename\x12$\n" +
	"\rsharedAlbumID\x18\x01 \x01(\x03R\rsharedAlbumID\x12$\n" +
	"\roldAlbumTitle\x18\x02 \x01(\tR\roldAlbumTitle\x12$\n" +
	"\rnewAlbumTitle\x18\x03 \x01(\tR\rnewAlbumTitle\x1ah\n" +
	" XmatMessengerSharedAlbumDeletion\x12$\n" +
	"\rsharedAlbumID\x18\x01 \x01(\x03R\rsharedAlbumID\x12\x1e\n" +
	"\n" +
	"albumTitle\x18\x02 \x01(\tR\n" +
	"albumTitle\x1a\x86\x03\n" +
	"&XmatMessengerSharedAlbumContentRemoval\x12$\n" +
	"\rsharedAlbumID\x18\x01 \x01(\x03R\rsharedAlbumID\x12\xa4\x01\n" +
	"\x11removedContentMap\x18\x02 \x03(\v2v.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumContentRemoval.RemovedContentTupleR\x11removedContentMap\x120\n" +
	"\x13removedContentCount\x18\x03 \x01(\x03R\x13removedContentCount\x12\x1e\n" +
	"\n" +
	"albumTitle\x18\x04 \x01(\tR\n" +
	"albumTitle\x1a=\n" +
	"\x13RemovedContentTuple\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x1a\xbe\x01\n" +
	" XmatMessengerSharedAlbumAddition\x12$\n" +
	"\rsharedAlbumID\x18\x01 \x01(\x03R\rsharedAlbumID\x12\x1e\n" +
	"\n" +
	"albumTitle\x18\x02 \x01(\tR\n" +
	"albumTitle\x12*\n" +
	"\x10numOfAttachments\x18\x03 \x01(\x03R\x10numOfAttachments\x12(\n" +
	"\x0fisAlbumCreation\x18\x04 \x01(\bR\x0fisAlbumCreation\x1a`\n" +
	"\x1aXmatMessengerQRCodeScanned\x12\"\n" +
	"\freceiverName\x18\x01 \x01(\tR\freceiverName\x12\x1e\n" +
	"\n" +
	"senderName\x18\x02 \x01(\tR\n" +
	"senderName\x1a\x83\x01\n" +
	"\x19XmatMessagingLimitSharing\x12\x1e\n" +
	"\n" +
	"senderName\x18\x01 \x01(\tR\n" +
	"senderName\x12\x1a\n" +
	"\bsenderID\x18\x02 \x01(\tR\bsenderID\x12*\n" +
	"\x10limitSharingType\x18\x03 \x01(\tR\x10limitSharingType\x1a\xf4\x01\n" +
	"\x0eXmatMagicWords\x12,\n" +
	"\x11newMagicWordCount\x18\x01 \x01(\x03R\x11newMagicWordCount\x124\n" +
	"\x15removedMagicWordCount\x18\x02 \x01(\x03R\x15removedMagicWordCount\x12\x1c\n" +
	"\tmagicWord\x18\x03 \x01(\tR\tmagicWord\x12 \n" +
	"\vemojiEffect\x18\x04 \x01(\tR\vemojiEffect\x12 \n" +
	"\visAllEdited\x18\x05 \x01(\bR\visAllEdited\x12\x1c\n" +
	"\tthemeName\x18\x06 \x01(\tR\tthemeName\x1a\xdf\x05\n" +
	"\vXmatLinkCTA\x126\n" +
	"\x16linkCtaXmatPrimaryText\x18\x01 \x01(\tR\x16linkCtaXmatPrimaryText\x12.\n" +
	"\x12linkCtaXmatCtaText\x18\x02 \x01(\tR\x12linkCtaXmatCtaText\x12,\n" +
	"\x11linkCtaXmatCtaURL\x18\x03 \x01(\tR\x11linkCtaXmatCtaURL\x122\n" +
	"\x14linkCtaXmatCtaIosURL\x18\x04 \x01(\tR\x14linkCtaXmatCtaIosURL\x12\x1e\n" +
	"\n" +
	"androidUri\x18\x05 \x01(\tR\n" +
	"androidUri\x12\x1a\n" +
	"\basyncURL\x18\x06 \x01(\tR\basyncURL\x12$\n" +
	"\rwwwIsAsyncURL\x18\a \x01(\bR\rwwwIsAsyncURL\x12\"\n" +
	"\fmsiteEnabled\x18\b \x01(\bR\fmsiteEnabled\x12,\n" +
	"\x11hideUriInFallback\x18\t \x01(\bR\x11hideUriInFallback\x126\n" +
	"\x16showConfirmationDialog\x18\n" +
	" \x01(\bR\x16showConfirmationDialog\x12\"\n" +
	"\fgraphPayload\x18\v \x01(\tR\fgraphPayload\x12&\n" +
	"\x0eidentifierName\x18\f \x01(\tR\x0eidentifierName\x12\x1a\n" +
	"\bthreadID\x18\r \x01(\tR\bthreadID\x12,\n" +
	"\x11hideCtaInFallback\x18\x0e \x01(\bR\x11hideCtaInFallback\x12B\n" +
	"\x1cctxAdConversationStarterInfo\x18\x0f \x01(\tR\x1cctxAdConversationStarterInfo\x12\x16\n" +
	"\x06fbmUri\x18\x10 \x01(\tR\x06fbmUri\x12(\n" +
	"\x0finitiatorUserID\x18\x11 \x01(\tR\x0finitiatorUserID\x1a\xab\x01\n" +
	"+XmatInstantGameEncryptedDynamicCustomUpdate\x12\x1e\n" +
	"\n" +
	"senderName\x18\x01 \x01(\tR\n" +
	"senderName\x12@\n" +
	"\x1bmuteManagementAdminTextType\x18\x02 \x01(\tR\x1bmuteManagementAdminTextType\x12\x1a\n" +
	"\bgameName\x18\x03 \x01(\tR\bgameName\x1as\n" +
	"#XmatFriendRequestConfirmedEncrypted\x12$\n" +
	"\rotherUserName\x18\x01 \x01(\tR\rotherUserName\x12&\n" +
	"\x0eisTurnOnCohort\x18\x02 \x01(\tR\x0eisTurnOnCohort\x1a\xbb\x02\n" +
	"\x17XmatDisappearingSetting\x128\n" +
	"\x17disappearingSettingTime\x18\x01 \x01(\x03R\x17disappearingSettingTime\x12>\n" +
	"\x1aoldDisappearingSettingTime\x18\x02 \x01(\x03R\x1aoldDisappearingSettingTime\x12B\n" +
	"\x1cdisappearingSettingActorFbid\x18\x03 \x01(\x03R\x1cdisappearingSettingActorFbid\x120\n" +
	"\x13newEphemeralityType\x18\x04 \x01(\x03R\x13newEphemeralityType\x120\n" +
	"\x13oldEphemeralityType\x18\x05 \x01(\x03R\x13oldEphemeralityType\x1a\xc2\x01\n" +
	"\x1aDisappearingSettingChanged\x12N\n" +
	"\"disappearingSettingDurationSeconds\x18\x01 \x01(\x05R\"disappearingSettingDurationSeconds\x12T\n" +
	"%oldDisappearingSettingDurationSeconds\x18\x02 \x01(\x05R%oldDisappearingSettingDurationSeconds\x1a-\n" +
	"\vIconChanged\x12\x1e\n" +
	"\n" +
	"threadIcon\x18\x01 \x01(\tR\n" +
	"threadIcon\x1a\xce\x01\n" +
	"\aLinkCta\x12|\n" +
	"\x0eukOsaAdminText\x18\x01 \x01(\v2R.WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LinkCta.UkOsaAdminTextH\x00R\x0eukOsaAdminText\x1a:\n" +
	"\x0eUkOsaAdminText\x12(\n" +
	"\x0finitiatorUserID\x18\x02 \x01(\tR\x0finitiatorUserIDB\t\n" +
	"\acontent\x1a4\n" +
	"\x14QuickReactionChanged\x12\x1c\n" +
	"\temojiName\x18\x01 \x01(\tR\temojiName\x1a0\n" +
	"\x10GroupNameChanged\x12\x1c\n" +
	"\tgroupName\x18\x01 \x01(\tR\tgroupName\x1aQ\n" +
	"\x0fNicknameChanged\x12\"\n" +
	"\ftargetUserID\x18\x01 \x01(\tR\ftargetUserID\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\x1an\n" +
	"\x10ChatThemeChanged\x12\x1c\n" +
	"\tthemeName\x18\x01 \x01(\tR\tthemeName\x12\x1e\n" +
	"\n" +
	"themeEmoji\x18\x02 \x01(\tR\n" +
	"themeEmoji\x12\x1c\n" +
	"\tthemeType\x18\x03 \x01(\x05R\tthemeTypeB\t\n" +
	"\acontentB>Z<go.mau.fi/whatsmeow/proto/waArmadilloMiTransportAdminMessage"

var (
	file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescOnce sync.Once
	file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescData []byte
)

func file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescGZIP() []byte {
	file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescOnce.Do(func() {
		file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDesc), len(file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDesc)))
	})
	return file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDescData
}

var file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_goTypes = []any{
	(MiTransportAdminMessage_LimitSharingChanged_SharingType)(0),                               // 0: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LimitSharingChanged.SharingType
	(MiTransportAdminMessage_GroupImageChanged_Action)(0),                                      // 1: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupImageChanged.Action
	(MiTransportAdminMessage_MessagePinned_Action)(0),                                          // 2: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.MessagePinned.Action
	(MiTransportAdminMessage_GroupMembershipAddModeChanged_Mode)(0),                            // 3: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupMembershipAddModeChanged.Mode
	(MiTransportAdminMessage_GroupAdminChanged_Action)(0),                                      // 4: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupAdminChanged.Action
	(MiTransportAdminMessage_GroupParticipantChanged_Action)(0),                                // 5: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupParticipantChanged.Action
	(*MiTransportAdminMessage)(nil),                                                            // 6: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage
	(*MiTransportAdminMessage_LimitSharingChanged)(nil),                                        // 7: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LimitSharingChanged
	(*MiTransportAdminMessage_GroupImageChanged)(nil),                                          // 8: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupImageChanged
	(*MiTransportAdminMessage_MessagePinned)(nil),                                              // 9: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.MessagePinned
	(*MiTransportAdminMessage_GroupMembershipAddModeChanged)(nil),                              // 10: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupMembershipAddModeChanged
	(*MiTransportAdminMessage_GroupAdminChanged)(nil),                                          // 11: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupAdminChanged
	(*MiTransportAdminMessage_GroupParticipantChanged)(nil),                                    // 12: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupParticipantChanged
	(*MiTransportAdminMessage_XmatUnpinMessageV2)(nil),                                         // 13: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatUnpinMessageV2
	(*MiTransportAdminMessage_XmatPinMessageV2)(nil),                                           // 14: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatPinMessageV2
	(*MiTransportAdminMessage_XmatUpdatePayments)(nil),                                         // 15: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatUpdatePayments
	(*MiTransportAdminMessage_XmatThreadQuickReaction)(nil),                                    // 16: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadQuickReaction
	(*MiTransportAdminMessage_XmatThreadNickname)(nil),                                         // 17: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadNickname
	(*MiTransportAdminMessage_XmatThreadIcon)(nil),                                             // 18: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadIcon
	(*MiTransportAdminMessage_XmatThemeColor)(nil),                                             // 19: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThemeColor
	(*MiTransportAdminMessage_XmatMessengerSharedAlbum)(nil),                                   // 20: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbum
	(*MiTransportAdminMessage_XmatMessengerSharedAlbumRename)(nil),                             // 21: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumRename
	(*MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion)(nil),                           // 22: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumDeletion
	(*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval)(nil),                     // 23: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumContentRemoval
	(*MiTransportAdminMessage_XmatMessengerSharedAlbumAddition)(nil),                           // 24: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumAddition
	(*MiTransportAdminMessage_XmatMessengerQRCodeScanned)(nil),                                 // 25: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerQRCodeScanned
	(*MiTransportAdminMessage_XmatMessagingLimitSharing)(nil),                                  // 26: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessagingLimitSharing
	(*MiTransportAdminMessage_XmatMagicWords)(nil),                                             // 27: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMagicWords
	(*MiTransportAdminMessage_XmatLinkCTA)(nil),                                                // 28: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatLinkCTA
	(*MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate)(nil),                // 29: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatInstantGameEncryptedDynamicCustomUpdate
	(*MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted)(nil),                        // 30: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatFriendRequestConfirmedEncrypted
	(*MiTransportAdminMessage_XmatDisappearingSetting)(nil),                                    // 31: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatDisappearingSetting
	(*MiTransportAdminMessage_DisappearingSettingChanged)(nil),                                 // 32: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.DisappearingSettingChanged
	(*MiTransportAdminMessage_IconChanged)(nil),                                                // 33: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.IconChanged
	(*MiTransportAdminMessage_LinkCta)(nil),                                                    // 34: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LinkCta
	(*MiTransportAdminMessage_QuickReactionChanged)(nil),                                       // 35: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.QuickReactionChanged
	(*MiTransportAdminMessage_GroupNameChanged)(nil),                                           // 36: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupNameChanged
	(*MiTransportAdminMessage_NicknameChanged)(nil),                                            // 37: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.NicknameChanged
	(*MiTransportAdminMessage_ChatThemeChanged)(nil),                                           // 38: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.ChatThemeChanged
	(*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_RemovedContentTuple)(nil), // 39: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumContentRemoval.RemovedContentTuple
	(*MiTransportAdminMessage_LinkCta_UkOsaAdminText)(nil),                                     // 40: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LinkCta.UkOsaAdminText
}
var file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_depIdxs = []int32{
	38, // 0: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.chatThemeChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.ChatThemeChanged
	37, // 1: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.nicknameChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.NicknameChanged
	12, // 2: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.groupParticipantChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupParticipantChanged
	11, // 3: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.groupAdminChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupAdminChanged
	36, // 4: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.groupNameChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupNameChanged
	10, // 5: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.groupMembershipAddModeChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupMembershipAddModeChanged
	9,  // 6: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.messagePinned:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.MessagePinned
	8,  // 7: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.groupImageChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupImageChanged
	35, // 8: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.quickReactionChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.QuickReactionChanged
	34, // 9: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.linkCta:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LinkCta
	33, // 10: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.iconChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.IconChanged
	32, // 11: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.disappearingSettingChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.DisappearingSettingChanged
	7,  // 12: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.limitSharingChanged:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LimitSharingChanged
	31, // 13: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatDisappearingSetting:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatDisappearingSetting
	30, // 14: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatFriendRequestConfirmedEncrypted:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatFriendRequestConfirmedEncrypted
	29, // 15: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatInstantGameEncryptedDynamicCustomUpdate:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatInstantGameEncryptedDynamicCustomUpdate
	28, // 16: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatLinkCta:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatLinkCTA
	27, // 17: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatMagicWords:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMagicWords
	26, // 18: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatMessagingLimitSharing:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessagingLimitSharing
	25, // 19: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatMessengerQrCodeScanned:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerQRCodeScanned
	24, // 20: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatMessengerSharedAlbumAddition:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumAddition
	23, // 21: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatMessengerSharedAlbumContentRemoval:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumContentRemoval
	22, // 22: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatMessengerSharedAlbumDeletion:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumDeletion
	21, // 23: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatMessengerSharedAlbumRename:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumRename
	20, // 24: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatMessengerSharedAlbum:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbum
	19, // 25: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatThemeColor:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThemeColor
	18, // 26: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatThreadIcon:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadIcon
	17, // 27: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatThreadNickname:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadNickname
	16, // 28: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatThreadQuickReaction:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatThreadQuickReaction
	15, // 29: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatUpdatePayments:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatUpdatePayments
	14, // 30: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatPinMessageV2:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatPinMessageV2
	13, // 31: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.xmatUnpinMessageV2:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatUnpinMessageV2
	0,  // 32: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LimitSharingChanged.sharingType:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LimitSharingChanged.SharingType
	1,  // 33: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupImageChanged.action:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupImageChanged.Action
	2,  // 34: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.MessagePinned.action:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.MessagePinned.Action
	3,  // 35: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupMembershipAddModeChanged.mode:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupMembershipAddModeChanged.Mode
	4,  // 36: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupAdminChanged.action:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupAdminChanged.Action
	5,  // 37: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupParticipantChanged.action:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.GroupParticipantChanged.Action
	39, // 38: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumContentRemoval.removedContentMap:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.XmatMessengerSharedAlbumContentRemoval.RemovedContentTuple
	40, // 39: WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LinkCta.ukOsaAdminText:type_name -> WAArmadilloMiTransportAdminMessage.MiTransportAdminMessage.LinkCta.UkOsaAdminText
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_init() }
func file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_init() {
	if File_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto != nil {
		return
	}
	file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[0].OneofWrappers = []any{
		(*MiTransportAdminMessage_ChatThemeChanged_)(nil),
		(*MiTransportAdminMessage_NicknameChanged_)(nil),
		(*MiTransportAdminMessage_GroupParticipantChanged_)(nil),
		(*MiTransportAdminMessage_GroupAdminChanged_)(nil),
		(*MiTransportAdminMessage_GroupNameChanged_)(nil),
		(*MiTransportAdminMessage_GroupMembershipAddModeChanged_)(nil),
		(*MiTransportAdminMessage_MessagePinned_)(nil),
		(*MiTransportAdminMessage_GroupImageChanged_)(nil),
		(*MiTransportAdminMessage_QuickReactionChanged_)(nil),
		(*MiTransportAdminMessage_LinkCta_)(nil),
		(*MiTransportAdminMessage_IconChanged_)(nil),
		(*MiTransportAdminMessage_DisappearingSettingChanged_)(nil),
		(*MiTransportAdminMessage_LimitSharingChanged_)(nil),
		(*MiTransportAdminMessage_XmatDisappearingSetting_)(nil),
		(*MiTransportAdminMessage_XmatFriendRequestConfirmedEncrypted_)(nil),
		(*MiTransportAdminMessage_XmatInstantGameEncryptedDynamicCustomUpdate_)(nil),
		(*MiTransportAdminMessage_XmatLinkCta)(nil),
		(*MiTransportAdminMessage_XmatMagicWords_)(nil),
		(*MiTransportAdminMessage_XmatMessagingLimitSharing_)(nil),
		(*MiTransportAdminMessage_XmatMessengerQrCodeScanned)(nil),
		(*MiTransportAdminMessage_XmatMessengerSharedAlbumAddition_)(nil),
		(*MiTransportAdminMessage_XmatMessengerSharedAlbumContentRemoval_)(nil),
		(*MiTransportAdminMessage_XmatMessengerSharedAlbumDeletion_)(nil),
		(*MiTransportAdminMessage_XmatMessengerSharedAlbumRename_)(nil),
		(*MiTransportAdminMessage_XmatMessengerSharedAlbum_)(nil),
		(*MiTransportAdminMessage_XmatThemeColor_)(nil),
		(*MiTransportAdminMessage_XmatThreadIcon_)(nil),
		(*MiTransportAdminMessage_XmatThreadNickname_)(nil),
		(*MiTransportAdminMessage_XmatThreadQuickReaction_)(nil),
		(*MiTransportAdminMessage_XmatUpdatePayments_)(nil),
		(*MiTransportAdminMessage_XmatPinMessageV2_)(nil),
		(*MiTransportAdminMessage_XmatUnpinMessageV2_)(nil),
	}
	file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes[28].OneofWrappers = []any{
		(*MiTransportAdminMessage_LinkCta_UkOsaAdminText_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDesc), len(file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_goTypes,
		DependencyIndexes: file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_depIdxs,
		EnumInfos:         file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_enumTypes,
		MessageInfos:      file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_msgTypes,
	}.Build()
	File_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto = out.File
	file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_goTypes = nil
	file_waArmadilloMiTransportAdminMessage_WAArmadilloMiTransportAdminMessage_proto_depIdxs = nil
}
